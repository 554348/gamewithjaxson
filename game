import turtle as trtl
import random as rand

# maze configuration variables
num_sides = 15
path_width = 25 
index = 0
turtle_names = ["T0", "T1", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9"]
def change_turtle_names():
  name = turtle_names[index]
  index += 1

colors = ["red", "blue", "orange", "purple", "green", "pink", "yellow", "brown", "light blue", "cyan"]
def change_wall_color():
  new_wall_color = rand.choice(colors)
  maze_drawer.pencolor(new_wall_color)

speed = 0

def draw_door(pos):
  
  maze_drawer.pencolor("black")
  maze_drawer.forward(pos)
  maze_drawer.penup()
  maze_drawer.forward(path_width*2)
  maze_drawer.pendown()

def draw_barrier(pos):
  change_wall_color()
  maze_drawer.forward(pos)
  maze_drawer.left(90)
  maze_drawer.forward(path_width*2)
  maze_drawer.backward(path_width*2)
  maze_drawer.right(90)

# event handlers for changing direction
def go_up():
  maze_runner.setheading(90)
  maze_runner.fillcolor(rand.choice(colors_2))
def go_down():
  maze_runner.setheading(270)
  maze_runner.fillcolor(rand.choice(colors_2))
def go_left():
  maze_runner.setheading(180)
  maze_runner.fillcolor(rand.choice(colors_2))
def go_right():
  maze_runner.setheading(0)
  maze_runner.fillcolor(rand.choice(colors_2))

# config the maze
maze_drawer = trtl.Turtle()
maze_drawer.pensize(5)
change_wall_color()
maze_drawer.speed("fastest")
maze_drawer.penup()
maze_drawer.goto(path_width*2, -path_width*2)
maze_drawer.pendown()

# config the maze runner
shapes = ["circle", "triangle", "square", "turtle"]
maze_runner = trtl.Turtle(shape = rand.choice(shapes))
colors_2 = ["red", "blue", "orange", "purple", "green", "pink", "yellow", "brown", "light blue", "cyan"]
maze_runner.fillcolor(rand.choice(colors_2))
maze_runner.penup()
maze_runner.goto(-path_width*2, path_width*2)

def slow_speed():
  maze_runner.forward(5)
  maze_runner.fillcolor(rand.choice(colors_2))
def medium_speed():
  maze_runner.forward(10)
  maze_runner.fillcolor(rand.choice(colors_2))
def high_speed():
  maze_runner.forward(20)
  maze_runner.fillcolor(rand.choice(colors_2))

# draw maze from the middle out
wall_len = path_width
for w in range(num_sides): 
  wall_len += path_width

  if (w > 4): 
    maze_drawer.left(90)

    # randomize location of doors and barriers in wall
    door = rand.randint(path_width*2, (wall_len - path_width*2))
    barrier = rand.randint(path_width*2, (wall_len - path_width*2))
    # if a door and barrier would be rendered on top of each other, get a new value
    while abs(door - barrier) < path_width:
      door = rand.randint(path_width*2, (wall_len - path_width*2))

    if (door < barrier):
      draw_door(door)
      draw_barrier(barrier - door - path_width*2)
      # draw the rest of the wall
      maze_drawer.forward(wall_len - barrier)
    else: 
      draw_barrier(barrier)
      draw_door(door - barrier)
      # draw the rest of the wall
      change_wall_color()
      maze_drawer.forward(wall_len - door - path_width*2)


maze_drawer.hideturtle()

# listen for events
wn = trtl.Screen()
wn.onkeypress(go_up, 'Up')
wn.onkeypress(go_down, 'Down')
wn.onkeypress(go_left, 'Left')
wn.onkeypress(go_right, 'Right')
wn.onkeypress(slow_speed, 'q')
wn.onkeypress(medium_speed, 'w')
wn.onkeypress(high_speed, 'e')
wn.listen()

wn.bgcolor("light gray")
wn.mainloop()
